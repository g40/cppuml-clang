
// Paste into https://graphviz.christine.website/ to experiment. great stuff.
digraph UML {
node [fontname = "Helvetica,Arial,sans-serif" margin=0 fontcolor=black fontsize=8 width=0.5 shape=box style=filled]
edge [fontname = "Helvetica,Arial,sans-serif" fontsize = 8 dir=back, arrowtail=empty]
// classes
inc_test[ label = <<table border="0" rows="*">
<tr><td>
inc_test
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\inc\test.h">
R:\src\python\cppuml-clang\test\inc\test.h:7
</td></tr>

<tr><td>
+ a: int <br />
</td></tr>

<tr><td>
+   inc_test(): void <br />+   ~inc_test(): void <br />
</td></tr>
</table>> ]
test__A[ label = <<table border="0" rows="*">
<tr><td>
A
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:153
</td></tr>

<tr><td>
+   A(): void <br />
</td></tr>

<tr><td>
- _pinc1: inc_test * <br />- _pinc2: inc_test * <br />
</td></tr>
</table>> ]
test__B[ label = <<table border="0" rows="*">
<tr><td>
B
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:164
</td></tr>

<tr><td>
+   B(): void <br />+   B(const int &amp;&amp;): void <br />+ static  factory*(const char *): test::B <br />
</td></tr>

<tr><td>
- _a: test::A <br />
</td></tr>
</table>> ]
test__C[ label = <<table border="0" rows="*">
<tr><td>
C
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:175
</td></tr>

<tr><td>
+   C(): void <br />
</td></tr>
</table>> ]
test__D[ label = <<table border="0" rows="*">
<tr><td>
D
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:181
</td></tr>

<tr><td>
+   D(): void <br />
</td></tr>
</table>> ]
test__E[ label = <<table border="0" rows="*">
<tr><td>
E
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:187
</td></tr>

<tr><td>
+   E(): void <br />
</td></tr>
</table>> ]
test__ns1__N[ label = <<table border="0" rows="*">
<tr><td>
N
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:195
</td></tr>

<tr><td>
+   N(): void <br />
</td></tr>
</table>> ]
test__ns2__N2[ label = <<table border="0" rows="*">
<tr><td>
N2
</td></tr>

<tr><td href="file:///R:\src\python\cppuml-clang\test\test.cpp">
R:\src\python\cppuml-clang\test\test.cpp:204
</td></tr>

<tr><td>
+   N2(): void <br />
</td></tr>
</table>> ]

// has-a (uses/ownership/association)
inc_test -> test__A [constraint=false, arrowtail=diamond]
test__A -> test__B [constraint=false, arrowtail=diamond]

// is-a (inheritance)
test__B -> test__C
test__B -> test__D
test__C -> test__E
test__D -> test__E
test__E -> test__ns1__N
test__E -> test__ns2__N2

// subgraphs for namespaces

subgraph cluster_0 { label="test" test__A test__B test__C test__D test__E 
subgraph cluster_1 { label="ns1" test__ns1__N }
subgraph cluster_2 { label="ns2" test__ns2__N2 }
}

//
} // EOF

